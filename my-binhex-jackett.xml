<?xml version="1.0"?>
<Container version="2">
  <Name>DoNotInstall</Name>
  <Repository>binhex1111/arch-jackett</Repository>
  <Registry>https://registry.hub.docker.com/r/binhex/arch-jackett/</Registry>
  <Network>bridge</Network>
  <MyIP/>
  <Shell>sh</Shell>
  <Privileged>false</Privileged>
  <Support>https://forums.lime-technology.com/topic/61433-support-binhex-jackett/</Support>
  <Project>https://github.com/Jackett/Jackett</Project>
  <Overview>[google](https://google.com) Jackett works as a proxy server - it translates queries from apps (Sonarr, Radarr, SickRage, CouchPotato, Mylar, DuckieTV, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping and translation logic - removing the burden from other apps.</Overview>
  <Category>Downloaders: MediaApp:Video</Category>
  <WebUI>http://[IP]:[PORT:9117]/</WebUI>
  <TemplateURL>https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/jackett.xml</TemplateURL>
  <Icon>https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/jackett-icon.png</Icon>
  <ExtraParams/>
  <PostArgs/>
  <CPUset/>
  <DateInstalled>1621768018</DateInstalled>
  <DonateText/>
  <DonateLink/>
  <Description>Jackett works as a proxy server - it translates queries from apps (Sonarr, Radarr, SickRage, CouchPotato, Mylar, DuckieTV, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping and translation logic - removing the burden from other apps.</Description>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort>443</HostPort>
        <ContainerPort>9117</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Data>
    <Volume>
      <HostDir>/mnt/user/appdata/data</HostDir>
      <ContainerDir>/data</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/mnt/user/appdata/binhex-jackett</HostDir>
      <ContainerDir>/config</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  <Environment>
    <Variable>
      <Value>000</Value>
      <Name>UMASK</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>99</Value>
      <Name>PUID</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>100</Value>
      <Name>PGID</Name>
      <Mode/>
    </Variable>
  </Environment>
  <Labels/>
  <Config Name="Host Port 1" Target="9117" Default="9117" Mode="tcp" Description="" Type="Port" Display="always" Required="true" Mask="false">443</Config>
  <Config Name="Host Path 2" Target="/data" Default="/mnt/user/appdata/data" Mode="rw" Description="" Type="Path" Display="always" Required="true" Mask="false">/mnt/user/appdata/data</Config>
  <Config Name="Key 1" Target="UMASK" Default="000" Mode="" Description="" Type="Variable" Display="always" Required="false" Mask="false">000</Config>
  <Config Name="Key 2" Target="PUID" Default="99" Mode="" Description="" Type="Variable" Display="always" Required="false" Mask="false">99</Config>
  <Config Name="Key 3" Target="PGID" Default="100" Mode="" Description="" Type="Variable" Display="always" Required="false" Mask="false">100</Config>
  <Config Name="AppData Config Path" Target="/config" Default="/mnt/user/appdata/binhex-jackett" Mode="rw" Description="" Type="Path" Display="advanced-hide" Required="true" Mask="false">/mnt/user/appdata/binhex-jackett</Config>
</Container>
